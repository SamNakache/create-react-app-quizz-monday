{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\ngetData();\nlet playerScore = 0; //holds the player score\n\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\nlet wrongAnswers = 0; //amount of wrong answers picked by player\n\nlet rightAnswers = 0;\nlet indexNumber = 0; //will be used in displaying next question\n\nlet currentQuestion;\nlet bestScore = 0;\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\nvar dataQuestions = [];\nvar cell = document.getElementById(\"option-one-label\");\nsetTimeout(() => {\n  countDown();\n}, 2000);\nlet end = false;\nvar x;\nvar run = true; // function for displaying next question in the array to dom\n//also handles displaying players and quiz information to dom\n\nfunction NextQuestion(index) {\n  removeColor();\n  console.log(index);\n\n  if (index < dataQuestions.length) {\n    indexNumber = index;\n    currentQuestion = dataQuestions[indexNumber];\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\n\n    if (currentQuestion.nOptions === 2) {\n      document.getElementById(\"option-three-label\").style.display = 'none';\n      document.getElementById(\"option-four-label\").style.display = 'none';\n    } else {\n      document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\n      document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\n      document.getElementById(\"option-three-label\").style.display = 'flex';\n      document.getElementById(\"option-four-label\").style.display = 'flex';\n    }\n  } else endOfGame();\n}\n\n_c = NextQuestion;\n\nfunction checkAnswer(option) {\n  if (option === currentQuestion.correctOption) {\n    playerScore += 10;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    rightAnswers++;\n  } else {\n    playerScore -= 5;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    wrongAnswers++;\n  }\n\n  colorRightAnswer();\n}\n\nfunction colorRightAnswer() {\n  switch (currentQuestion.correctOption) {\n    case 'optionA':\n      cell = document.getElementById(\"option-one-label\");\n      break;\n\n    case 'optionB':\n      cell = document.getElementById(\"option-two-label\");\n      break;\n\n    case 'optionC':\n      cell = document.getElementById(\"option-three-label\");\n      break;\n\n    case 'optionD':\n      cell = document.getElementById(\"option-four-label\");\n      break;\n\n    default:\n  }\n\n  cell.style.backgroundColor = 'green';\n}\n\nfunction removeColor() {\n  cell.style.backgroundColor = 'lightgray';\n}\n\nfunction countDown() {\n  NextQuestion(indexNumber);\n  var seconds = 14; // Update the count down every 1 second\n\n  var x = setInterval(function () {\n    // Display the result in the element \n    addColor(14 / seconds);\n    document.getElementById(\"remaining-time\").innerHTML = seconds; // If the count down is finished, write some text\n\n    if (seconds < 1) {\n      stopInterval();\n    }\n\n    if (!(indexNumber < dataQuestions.length) || end === true) {\n      clearInterval(x);\n      document.getElementById(\"remaining-time\").innerHTML = \"END\";\n    }\n\n    seconds--;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(x);\n  indexNumber++;\n  countDown();\n}\n\ndocument.getElementById(\"option-one-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionA\");\n  setTimeout(() => {\n    stopInterval();\n  }, 1000);\n});\ndocument.getElementById(\"option-two-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionB\");\n  setTimeout(() => {\n    stopInterval();\n  }, 1000);\n});\ndocument.getElementById(\"option-three-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionC\");\n  setTimeout(() => {\n    stopInterval();\n  }, 1000);\n});\ndocument.getElementById(\"option-four-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionD\");\n  setTimeout(() => {\n    stopInterval();\n  }, 1000);\n});\n\nfunction addColor(result) {\n  if (result >= 3) document.getElementById(\"remaining-time\").style.color = 'red';else if (result < 3 && result >= 1.5) document.getElementById(\"remaining-time\").style.color = 'yellow';else document.getElementById(\"remaining-time\").style.color = 'green';\n}\n\nfunction endOfGame() {\n  end = true;\n  document.getElementById('score-modal').style.display = 'flex';\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\n  document.getElementById('right-answers').innerHTML = rightAnswers;\n  document.getElementById('score').innerHTML = playerScore;\n} //New Game\n\n\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () {\n  end = false;\n  eraseEverything();\n  getData();\n  countDown();\n});\n\nfunction eraseEverything() {\n  if (playerScore > bestScore) {\n    bestScore = playerScore;\n    document.getElementById(\"best-score\").innerHTML = playerScore;\n  }\n\n  document.getElementById('score-modal').style.display = 'none';\n  playerScore = 0; //holds the player score\n\n  document.getElementById(\"player-score\").innerHTML = playerScore;\n  wrongAnswers = 0; //amount of wrong answers picked by player\n\n  rightAnswers = 0;\n  indexNumber = 0; //will be used in displaying next question\n\n  dataQuestions = [];\n}\n\nfunction getData() {\n  const url = 'https://opentdb.com/api.php?amount=100';\n  fetch(url).then(resp => resp.json()).then(function (data) {\n    let q = data.results;\n    q.forEach(element => {\n      element.incorrect_answers.push(element.correct_answer);\n      shuffleArray(element.incorrect_answers);\n      var cOption = \"\"; //Will contain the index of the right answer after we shuffled the options\n\n      var c = element.incorrect_answers.indexOf(element.correct_answer);\n\n      switch (c) {\n        case 0:\n          cOption = \"optionA\";\n          break;\n\n        case 1:\n          cOption = \"optionB\";\n          break;\n\n        case 2:\n          cOption = \"optionC\";\n          break;\n\n        case 3:\n          cOption = \"optionD\";\n          break;\n\n        default:\n      }\n\n      const temp = {\n        question: element.question,\n        optionA: element.incorrect_answers[0],\n        optionB: element.incorrect_answers[1],\n        optionC: element.incorrect_answers[2],\n        optionD: element.incorrect_answers[3],\n        correctOption: cOption,\n        nOptions: element.incorrect_answers.length //Will contain the number of options for each question\n\n      };\n      dataQuestions.push(temp);\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/cApplication/create-react-app-quizz-monday/quiz-m/src/index.js"],"names":["React","ReactDOM","App","getData","playerScore","document","getElementById","innerHTML","wrongAnswers","rightAnswers","indexNumber","currentQuestion","bestScore","dataQuestions","cell","setTimeout","countDown","end","x","run","NextQuestion","index","removeColor","console","log","length","question","optionA","optionB","nOptions","style","display","optionC","optionD","endOfGame","checkAnswer","option","correctOption","colorRightAnswer","backgroundColor","seconds","setInterval","addColor","stopInterval","clearInterval","addEventListener","result","color","eraseEverything","url","fetch","then","resp","json","data","q","results","forEach","element","incorrect_answers","push","correct_answer","shuffleArray","cOption","c","indexOf","temp","catch","error","array","i","j","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\ngetData()\r\n\r\nlet playerScore = 0  //holds the player score\r\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\r\nlet wrongAnswers = 0 //amount of wrong answers picked by player\r\nlet rightAnswers = 0\r\nlet indexNumber = 0 //will be used in displaying next question\r\nlet currentQuestion;\r\nlet bestScore = 0;\r\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\r\nvar dataQuestions = [];\r\nvar cell = document.getElementById(\"option-one-label\")\r\nsetTimeout(() => { countDown(); }, 2000);\r\nlet end = false;\r\nvar x;\r\nvar run = true; \r\n\r\n\r\n// function for displaying next question in the array to dom\r\n//also handles displaying players and quiz information to dom\r\nfunction NextQuestion(index) {\r\n  removeColor()\r\n  console.log(index)\r\n  if (index < dataQuestions.length) {\r\n    indexNumber = index;\r\n    currentQuestion = dataQuestions[indexNumber];\r\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\r\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\r\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\r\n    if (currentQuestion.nOptions === 2) {\r\n      document.getElementById(\"option-three-label\").style.display = 'none';\r\n      document.getElementById(\"option-four-label\").style.display = 'none';\r\n    }\r\n    else {\r\n      document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\r\n      document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\r\n      document.getElementById(\"option-three-label\").style.display = 'flex';\r\n      document.getElementById(\"option-four-label\").style.display = 'flex';\r\n    }\r\n\r\n  }\r\n  else\r\n    endOfGame()\r\n}\r\n\r\nfunction checkAnswer(option) {\r\n  if (option === currentQuestion.correctOption) {\r\n    playerScore += 10;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    rightAnswers++;\r\n  }\r\n  else {\r\n    playerScore -= 5;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    wrongAnswers++;\r\n  }\r\n  colorRightAnswer()\r\n  \r\n}\r\n\r\n\r\nfunction colorRightAnswer(){\r\n  switch(currentQuestion.correctOption){\r\n    case 'optionA':\r\n      cell = document.getElementById(\"option-one-label\")\r\n      break;\r\n    case 'optionB':\r\n      cell= document.getElementById(\"option-two-label\")\r\n      break;\r\n    case 'optionC':\r\n      cell= document.getElementById(\"option-three-label\")\r\n      break;\r\n    case 'optionD':\r\n      cell= document.getElementById(\"option-four-label\")\r\n      break;\r\n    default:\r\n  }\r\n  cell.style.backgroundColor = 'green'\r\n}\r\n\r\nfunction removeColor(){\r\n  cell.style.backgroundColor = 'lightgray'\r\n}\r\n\r\nfunction countDown() {\r\n  \r\n    NextQuestion(indexNumber);\r\n    var seconds = 14;\r\n\r\n  \r\n\r\n  // Update the count down every 1 second\r\n  var x = setInterval(function () {\r\n\r\n    // Display the result in the element \r\n    addColor(14 / seconds)\r\n    document.getElementById(\"remaining-time\").innerHTML = seconds;\r\n\r\n\r\n    // If the count down is finished, write some text\r\n    if (seconds < 1) {\r\n      stopInterval()\r\n    }\r\n    if (!(indexNumber < dataQuestions.length) || end === true) {\r\n      clearInterval(x)\r\n      document.getElementById(\"remaining-time\").innerHTML = \"END\";\r\n    }\r\n    seconds--;\r\n  }, 1000);\r\n  \r\n}\r\nfunction stopInterval(){\r\n      clearInterval(x);\r\n      indexNumber++;\r\n        countDown();\r\n    }\r\n\r\n\r\ndocument.getElementById(\"option-one-label\").addEventListener(\"click\", function () { checkAnswer(\"optionA\"); setTimeout(() => { stopInterval(); }, 1000); });\r\ndocument.getElementById(\"option-two-label\").addEventListener(\"click\", function () { checkAnswer(\"optionB\"); setTimeout(() => { stopInterval(); }, 1000); });\r\ndocument.getElementById(\"option-three-label\").addEventListener(\"click\", function () { checkAnswer(\"optionC\"); setTimeout(() => { stopInterval(); }, 1000); });\r\ndocument.getElementById(\"option-four-label\").addEventListener(\"click\", function () { checkAnswer(\"optionD\"); setTimeout(() => { stopInterval(); }, 1000); });\r\n\r\nfunction addColor(result) {\r\n  if (result >= 3)\r\n    document.getElementById(\"remaining-time\").style.color = 'red'\r\n  else if (result < 3 && result >= 1.5)\r\n    document.getElementById(\"remaining-time\").style.color = 'yellow'\r\n  else\r\n    document.getElementById(\"remaining-time\").style.color = 'green'\r\n}\r\n\r\n\r\nfunction endOfGame() {\r\n  end = true;\r\n  document.getElementById('score-modal').style.display = 'flex';\r\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\r\n  document.getElementById('right-answers').innerHTML = rightAnswers;\r\n  document.getElementById('score').innerHTML = playerScore;\r\n\r\n}\r\n\r\n//New Game\r\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () { \r\n  end = false;\r\n  eraseEverything();\r\n  getData();\r\n  countDown();\r\n});\r\n\r\n\r\n\r\nfunction eraseEverything() {\r\n  if (playerScore > bestScore) {\r\n    bestScore = playerScore\r\n    document.getElementById(\"best-score\").innerHTML = playerScore;\r\n  }\r\n  document.getElementById('score-modal').style.display = 'none';\r\n  playerScore = 0  //holds the player score\r\n  document.getElementById(\"player-score\").innerHTML = playerScore;\r\n  wrongAnswers = 0 //amount of wrong answers picked by player\r\n  rightAnswers = 0\r\n  indexNumber = 0 //will be used in displaying next question\r\n  dataQuestions = []\r\n}\r\n\r\nfunction getData() {\r\n\r\n  const url = 'https://opentdb.com/api.php?amount=100';\r\n\r\n  fetch(url)\r\n    .then((resp) => resp.json())\r\n    .then(function (data) {\r\n      let q = data.results;\r\n      q.forEach(element => {\r\n        element.incorrect_answers.push(element.correct_answer)\r\n        shuffleArray(element.incorrect_answers)\r\n        var cOption = \"\";//Will contain the index of the right answer after we shuffled the options\r\n        var c = element.incorrect_answers.indexOf(element.correct_answer)\r\n        switch (c) {\r\n          case 0:\r\n            cOption = \"optionA\"\r\n            break;\r\n          case 1:\r\n            cOption = \"optionB\"\r\n            break;\r\n          case 2:\r\n            cOption = \"optionC\"\r\n            break;\r\n          case 3:\r\n            cOption = \"optionD\"\r\n            break;\r\n          default:\r\n        }\r\n\r\n        const temp = {\r\n          question: element.question,\r\n          optionA: element.incorrect_answers[0],\r\n          optionB: element.incorrect_answers[1],\r\n          optionC: element.incorrect_answers[2],\r\n          optionD: element.incorrect_answers[3],\r\n          correctOption: cOption,\r\n          nOptions: element.incorrect_answers.length//Will contain the number of options for each question\r\n        }\r\n        dataQuestions.push(temp)\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}