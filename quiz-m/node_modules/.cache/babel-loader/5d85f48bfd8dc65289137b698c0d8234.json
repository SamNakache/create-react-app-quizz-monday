{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () {\n  newGame();\n});\ngetData();\nlet playerScore = 0; //holds the player score\n\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\nlet wrongAnswers = 0; //amount of wrong answers picked by player\n\nlet rightAnswers = 0;\nlet indexNumber = 0; //will be used in displaying next question\n\nlet currentQuestion;\nlet bestScore = 0;\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\nconst dataQuestions = [];\ncountDown(); // function for displaying next question in the array to dom\n//also handles displaying players and quiz information to dom\n\nfunction NextQuestion(index) {\n  console.log(index);\n\n  if (index < dataQuestions.length) {\n    indexNumber = index;\n    currentQuestion = dataQuestions[indexNumber];\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\n    document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\n    document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\n  } else endOfGame();\n}\n\n_c = NextQuestion;\n\nfunction checkAnswer(option) {\n  if (option === currentQuestion.correctOption) {\n    playerScore += 10;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    rightAnswers++;\n  } else {\n    playerScore -= 5;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    wrongAnswers++;\n  }\n}\n\nfunction countDown() {\n  NextQuestion(indexNumber);\n  var seconds = 9; // Update the count down every 1 second\n\n  var x = setInterval(function () {\n    // Display the result in the element \n    addColor(9 / seconds);\n    document.getElementById(\"remaining-time\").innerHTML = seconds; // If the count down is finished, write some text\n\n    if (seconds < 1) {\n      stopInterval();\n    }\n\n    if (!(indexNumber < dataQuestions.length)) {\n      clearInterval(x);\n    }\n\n    seconds--;\n  }, 1000);\n\n  function stopInterval() {\n    clearInterval(x);\n    indexNumber++;\n    countDown();\n  }\n\n  document.getElementById(\"option-one-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionA\");\n    stopInterval();\n  });\n  document.getElementById(\"option-two-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionB\");\n    stopInterval();\n  });\n  document.getElementById(\"option-three-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionC\");\n    stopInterval();\n  });\n  document.getElementById(\"option-four-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionD\");\n    stopInterval();\n  });\n}\n\nfunction addColor(result) {\n  if (result >= 3) document.getElementById(\"remaining-time\").style.color = 'red';else if (result < 3 && result >= 1.5) document.getElementById(\"remaining-time\").style.color = 'yellow';else document.getElementById(\"remaining-time\").style.color = 'green';\n}\n\nfunction endOfGame() {\n  document.getElementById(\"remaining-time\").innerHTML = \"END\";\n  document.getElementById('score-modal').style.display = 'flex';\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\n  document.getElementById('right-answers').innerHTML = rightAnswers;\n  document.getElementById('score').innerHTML = playerScore;\n}\n\nfunction newGame() {\n  eraseEverything();\n  getData();\n  countDown();\n}\n\nfunction eraseEverything() {\n  if (playerScore > bestScore) {\n    bestScore = playerScore;\n    document.getElementById(\"best-score\").innerHTML = playerScore;\n  }\n\n  document.getElementById('score-modal').style.display = 'none';\n  playerScore = 0; //holds the player score\n\n  document.getElementById(\"player-score\").innerHTML = playerScore;\n  wrongAnswers = 0; //amount of wrong answers picked by player\n\n  rightAnswers = 0;\n  indexNumber = 0; //will be used in displaying next question\n\n  dataQuestions = [];\n}\n\nfunction getData() {\n  const url = 'https://opentdb.com/api.php?amount=100';\n  fetch(url).then(resp => resp.json()).then(function (data) {\n    let q = data.results;\n    q.forEach(element => {\n      const temp = {\n        question: element.question,\n        optionA: element.incorrect_answers[0],\n        optionB: element.incorrect_answers[1],\n        optionC: element.incorrect_answers[2],\n        optionD: element.correct_answer,\n        correctOption: \"optionD\",\n        nIncorrectOptions: element.incorrect_answers.length\n      };\n      dataQuestions.push(temp);\n    });\n    console.log(dataQuestions[1].question);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/cApplication/create-react-app-quizz-monday/quiz-m/src/index.js"],"names":["React","ReactDOM","App","document","getElementById","addEventListener","newGame","getData","playerScore","innerHTML","wrongAnswers","rightAnswers","indexNumber","currentQuestion","bestScore","dataQuestions","countDown","NextQuestion","index","console","log","length","question","optionA","optionB","optionC","optionD","endOfGame","checkAnswer","option","correctOption","seconds","x","setInterval","addColor","stopInterval","clearInterval","result","style","color","display","eraseEverything","url","fetch","then","resp","json","data","q","results","forEach","element","temp","incorrect_answers","correct_answer","nIncorrectOptions","push","catch","error"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () { newGame() });\r\ngetData()\r\n\r\n\r\nlet playerScore = 0  //holds the player score\r\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\r\nlet wrongAnswers = 0 //amount of wrong answers picked by player\r\nlet rightAnswers = 0\r\nlet indexNumber = 0 //will be used in displaying next question\r\nlet currentQuestion\r\nlet bestScore = 0;\r\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\r\nconst dataQuestions = [];\r\ncountDown();\r\n\r\n\r\n// function for displaying next question in the array to dom\r\n//also handles displaying players and quiz information to dom\r\nfunction NextQuestion(index) {\r\n  console.log(index)\r\n  if (index < dataQuestions.length) {\r\n    indexNumber = index;\r\n    currentQuestion = dataQuestions[indexNumber];\r\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\r\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\r\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\r\n    document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\r\n    document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\r\n  }\r\n  else\r\n    endOfGame()\r\n}\r\n\r\nfunction checkAnswer(option) {\r\n  if (option === currentQuestion.correctOption) {\r\n    playerScore += 10;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    rightAnswers++;\r\n  }\r\n  else {\r\n    playerScore -= 5;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    wrongAnswers++;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction countDown() {\r\n    NextQuestion(indexNumber)\r\n  \r\n  var seconds = 9;\r\n\r\n  // Update the count down every 1 second\r\n  var x = setInterval(function () {\r\n\r\n    // Display the result in the element \r\n    addColor(9/seconds)\r\n    document.getElementById(\"remaining-time\").innerHTML = seconds;\r\n    \r\n\r\n    // If the count down is finished, write some text\r\n    if (seconds < 1) {\r\n      stopInterval()\r\n    }\r\n    if (!(indexNumber<dataQuestions.length)){\r\n      clearInterval(x)\r\n    }\r\n    seconds--;\r\n  }, 1000);\r\n\r\n  function stopInterval(){\r\n    clearInterval(x);\r\n    indexNumber++;\r\n      countDown();\r\n  }\r\n\r\n  \r\n\r\ndocument.getElementById(\"option-one-label\").addEventListener(\"click\", function () {checkAnswer(\"optionA\"); stopInterval()});\r\ndocument.getElementById(\"option-two-label\").addEventListener(\"click\", function () {checkAnswer(\"optionB\"); stopInterval()});\r\ndocument.getElementById(\"option-three-label\").addEventListener(\"click\", function () {checkAnswer(\"optionC\"); stopInterval()});\r\ndocument.getElementById(\"option-four-label\").addEventListener(\"click\", function () {checkAnswer(\"optionD\"); stopInterval()});\r\n}\r\n\r\nfunction addColor(result){\r\n  if (result>=3)\r\n    document.getElementById(\"remaining-time\").style.color = 'red'\r\n  else if (result<3 && result>=1.5)\r\n    document.getElementById(\"remaining-time\").style.color = 'yellow'\r\n  else\r\n    document.getElementById(\"remaining-time\").style.color = 'green'\r\n}\r\n\r\n\r\nfunction endOfGame() {\r\n  document.getElementById(\"remaining-time\").innerHTML = \"END\";\r\n  document.getElementById('score-modal').style.display = 'flex';\r\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\r\n  document.getElementById('right-answers').innerHTML = rightAnswers;\r\n  document.getElementById('score').innerHTML = playerScore;\r\n\r\n}\r\n\r\nfunction newGame() {\r\n  eraseEverything()\r\n  getData();\r\n  countDown();\r\n}\r\n\r\nfunction eraseEverything() {\r\n  if (playerScore > bestScore) {\r\n    bestScore = playerScore\r\n    document.getElementById(\"best-score\").innerHTML = playerScore;\r\n  }\r\n\r\n  document.getElementById('score-modal').style.display = 'none';\r\n  playerScore = 0  //holds the player score\r\n  document.getElementById(\"player-score\").innerHTML = playerScore;\r\n  wrongAnswers = 0 //amount of wrong answers picked by player\r\n  rightAnswers = 0\r\n  indexNumber = 0 //will be used in displaying next question\r\n  dataQuestions = []\r\n}\r\n\r\nfunction getData(){\r\n\r\n  const url = 'https://opentdb.com/api.php?amount=100';\r\n\r\nfetch(url)\r\n.then((resp) => resp.json())\r\n.then(function(data) {\r\n  let q = data.results;\r\n  q.forEach(element => {\r\n    const temp = {\r\n      question: element.question,\r\n      optionA: element.incorrect_answers[0],\r\n      optionB: element.incorrect_answers[1],\r\n      optionC: element.incorrect_answers[2],\r\n      optionD: element.correct_answer,\r\n      correctOption: \"optionD\",\r\n      nIncorrectOptions: element.incorrect_answers.length\r\n    }\r\n    dataQuestions.push(temp)\r\n  });\r\n  console.log(dataQuestions[1].question)\r\n})\r\n.catch(function(error) {\r\n  console.log(error);\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}