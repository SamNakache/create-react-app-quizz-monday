{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () {\n  newGame();\n});\ngetData();\nlet playerScore = 0; //holds the player score\n\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\nlet wrongAnswers = 0; //amount of wrong answers picked by player\n\nlet rightAnswers = 0;\nlet indexNumber = 0; //will be used in displaying next question\n\nlet currentQuestion;\nlet bestScore = 0;\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\nconst dataQuestions = [];\nsetTimeout(() => {\n  countDown();\n}, 2000); // function for displaying next question in the array to dom\n//also handles displaying players and quiz information to dom\n\nfunction NextQuestion(index) {\n  console.log(index);\n\n  if (index < dataQuestions.length) {\n    indexNumber = index;\n    currentQuestion = dataQuestions[indexNumber];\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\n\n    if (currentQuestion.nIncorrectOptions === 1) {\n      document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionD;\n      currentQuestion.correctOption = \"optionD\";\n      document.getElementById(\"option-three-label\").style.display = 'none';\n      document.getElementById(\"option-four-label\").style.display = 'none';\n    } else {\n      document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\n      document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\n      document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\n      document.getElementById(\"option-three-label\").style.display = 'flex';\n      document.getElementById(\"option-four-label\").style.display = 'flex';\n    }\n  } else endOfGame();\n}\n\n_c = NextQuestion;\n\nfunction checkAnswer(option) {\n  if (option === currentQuestion.correctOption) {\n    playerScore += 10;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    rightAnswers++;\n  } else {\n    playerScore -= 5;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    wrongAnswers++;\n  }\n}\n\nfunction countDown() {\n  NextQuestion(indexNumber);\n  var seconds = 9; // Update the count down every 1 second\n\n  var x = setInterval(function () {\n    // Display the result in the element \n    addColor(9 / seconds);\n    document.getElementById(\"remaining-time\").innerHTML = seconds; // If the count down is finished, write some text\n\n    if (seconds < 1) {\n      stopInterval();\n    }\n\n    if (!(indexNumber < dataQuestions.length)) {\n      clearInterval(x);\n    }\n\n    seconds--;\n  }, 1000);\n\n  function stopInterval() {\n    clearInterval(x);\n    indexNumber++;\n    countDown();\n  }\n\n  document.getElementById(\"option-one-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionA\");\n    stopInterval();\n  });\n  document.getElementById(\"option-two-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionB\");\n    stopInterval();\n  });\n  document.getElementById(\"option-three-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionC\");\n    stopInterval();\n  });\n  document.getElementById(\"option-four-label\").addEventListener(\"click\", function () {\n    checkAnswer(\"optionD\");\n    stopInterval();\n  });\n}\n\nfunction addColor(result) {\n  if (result >= 3) document.getElementById(\"remaining-time\").style.color = 'red';else if (result < 3 && result >= 1.5) document.getElementById(\"remaining-time\").style.color = 'yellow';else document.getElementById(\"remaining-time\").style.color = 'green';\n}\n\nfunction endOfGame() {\n  document.getElementById(\"remaining-time\").innerHTML = \"END\";\n  document.getElementById('score-modal').style.display = 'flex';\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\n  document.getElementById('right-answers').innerHTML = rightAnswers;\n  document.getElementById('score').innerHTML = playerScore;\n}\n\nfunction newGame() {\n  eraseEverything();\n  getData();\n  countDown();\n}\n\nfunction eraseEverything() {\n  if (playerScore > bestScore) {\n    bestScore = playerScore;\n    document.getElementById(\"best-score\").innerHTML = playerScore;\n  }\n\n  document.getElementById('score-modal').style.display = 'none';\n  playerScore = 0; //holds the player score\n\n  document.getElementById(\"player-score\").innerHTML = playerScore;\n  wrongAnswers = 0; //amount of wrong answers picked by player\n\n  rightAnswers = 0;\n  indexNumber = 0; //will be used in displaying next question\n\n  dataQuestions = [];\n}\n\nfunction getData() {\n  const url = 'https://opentdb.com/api.php?amount=100';\n  fetch(url).then(resp => resp.json()).then(function (data) {\n    let q = data.results;\n    q.forEach(element => {\n      var shuf = element.incorrect_answers.push(element.correct_answer);\n      console.log(element.incorrect_answers);\n      shuffleArray(shuf);\n      var cOption = \"\";\n\n      switch (shuf.indexOf(element.correct_answer)) {\n        case 0:\n          cOption = \"optionA\";\n          break;\n\n        case 1:\n          cOption = \"optionB\";\n          break;\n\n        case 2:\n          cOption = \"optionC\";\n          break;\n\n        case 3:\n          cOption = \"optionD\";\n          break;\n      }\n\n      const temp = {\n        question: element.question,\n        optionA: shuf[0],\n        optionB: shuf[1],\n        optionC: shuf[2],\n        optionD: shuf[3],\n        correctOption: cOption,\n        nIncorrectOptions: element.incorrect_answers.length\n      };\n      dataQuestions.push(temp);\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/cApplication/create-react-app-quizz-monday/quiz-m/src/index.js"],"names":["React","ReactDOM","App","document","getElementById","addEventListener","newGame","getData","playerScore","innerHTML","wrongAnswers","rightAnswers","indexNumber","currentQuestion","bestScore","dataQuestions","setTimeout","countDown","NextQuestion","index","console","log","length","question","optionA","nIncorrectOptions","optionD","correctOption","style","display","optionB","optionC","endOfGame","checkAnswer","option","seconds","x","setInterval","addColor","stopInterval","clearInterval","result","color","eraseEverything","url","fetch","then","resp","json","data","q","results","forEach","element","shuf","incorrect_answers","push","correct_answer","shuffleArray","cOption","indexOf","temp","catch","error","array","i","j","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () { newGame() });\r\ngetData()\r\n\r\n\r\nlet playerScore = 0  //holds the player score\r\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\r\nlet wrongAnswers = 0 //amount of wrong answers picked by player\r\nlet rightAnswers = 0\r\nlet indexNumber = 0 //will be used in displaying next question\r\nlet currentQuestion\r\nlet bestScore = 0;\r\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\r\nconst dataQuestions = [];\r\nsetTimeout(() => { countDown(); }, 2000);\r\n\r\n\r\n\r\n// function for displaying next question in the array to dom\r\n//also handles displaying players and quiz information to dom\r\nfunction NextQuestion(index) {\r\n  console.log(index)\r\n  if (index < dataQuestions.length) {\r\n    indexNumber = index;\r\n    currentQuestion = dataQuestions[indexNumber];\r\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\r\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\r\n    if (currentQuestion.nIncorrectOptions === 1) {\r\n      document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionD;\r\n      currentQuestion.correctOption = \"optionD\";\r\n      document.getElementById(\"option-three-label\").style.display = 'none';\r\n      document.getElementById(\"option-four-label\").style.display = 'none';\r\n    }\r\n    else {\r\n      document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\r\n      document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\r\n      document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\r\n      document.getElementById(\"option-three-label\").style.display = 'flex';\r\n      document.getElementById(\"option-four-label\").style.display = 'flex';\r\n    }\r\n\r\n  }\r\n  else\r\n    endOfGame()\r\n}\r\n\r\nfunction checkAnswer(option) {\r\n  if (option === currentQuestion.correctOption) {\r\n    playerScore += 10;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    rightAnswers++;\r\n  }\r\n  else {\r\n    playerScore -= 5;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    wrongAnswers++;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction countDown() {\r\n  NextQuestion(indexNumber)\r\n\r\n  var seconds = 9;\r\n\r\n  // Update the count down every 1 second\r\n  var x = setInterval(function () {\r\n\r\n    // Display the result in the element \r\n    addColor(9 / seconds)\r\n    document.getElementById(\"remaining-time\").innerHTML = seconds;\r\n\r\n\r\n    // If the count down is finished, write some text\r\n    if (seconds < 1) {\r\n      stopInterval()\r\n    }\r\n    if (!(indexNumber < dataQuestions.length)) {\r\n      clearInterval(x)\r\n    }\r\n    seconds--;\r\n  }, 1000);\r\n\r\n  function stopInterval() {\r\n    clearInterval(x);\r\n    indexNumber++;\r\n    countDown();\r\n  }\r\n\r\n\r\n\r\n  document.getElementById(\"option-one-label\").addEventListener(\"click\", function () { checkAnswer(\"optionA\"); stopInterval() });\r\n  document.getElementById(\"option-two-label\").addEventListener(\"click\", function () { checkAnswer(\"optionB\"); stopInterval() });\r\n  document.getElementById(\"option-three-label\").addEventListener(\"click\", function () { checkAnswer(\"optionC\"); stopInterval() });\r\n  document.getElementById(\"option-four-label\").addEventListener(\"click\", function () { checkAnswer(\"optionD\"); stopInterval() });\r\n}\r\n\r\nfunction addColor(result) {\r\n  if (result >= 3)\r\n    document.getElementById(\"remaining-time\").style.color = 'red'\r\n  else if (result < 3 && result >= 1.5)\r\n    document.getElementById(\"remaining-time\").style.color = 'yellow'\r\n  else\r\n    document.getElementById(\"remaining-time\").style.color = 'green'\r\n}\r\n\r\n\r\nfunction endOfGame() {\r\n  document.getElementById(\"remaining-time\").innerHTML = \"END\";\r\n  document.getElementById('score-modal').style.display = 'flex';\r\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\r\n  document.getElementById('right-answers').innerHTML = rightAnswers;\r\n  document.getElementById('score').innerHTML = playerScore;\r\n\r\n}\r\n\r\nfunction newGame() {\r\n  eraseEverything()\r\n  getData();\r\n  countDown();\r\n}\r\n\r\nfunction eraseEverything() {\r\n  if (playerScore > bestScore) {\r\n    bestScore = playerScore\r\n    document.getElementById(\"best-score\").innerHTML = playerScore;\r\n  }\r\n\r\n  document.getElementById('score-modal').style.display = 'none';\r\n  playerScore = 0  //holds the player score\r\n  document.getElementById(\"player-score\").innerHTML = playerScore;\r\n  wrongAnswers = 0 //amount of wrong answers picked by player\r\n  rightAnswers = 0\r\n  indexNumber = 0 //will be used in displaying next question\r\n  dataQuestions = []\r\n}\r\n\r\nfunction getData() {\r\n\r\n  const url = 'https://opentdb.com/api.php?amount=100';\r\n\r\n  fetch(url)\r\n    .then((resp) => resp.json())\r\n    .then(function (data) {\r\n      let q = data.results;\r\n      q.forEach(element => {\r\n        var shuf = element.incorrect_answers.push(element.correct_answer)\r\n        console.log(element.incorrect_answers)\r\n        shuffleArray(shuf)\r\n        var cOption = \"\"\r\n        switch (shuf.indexOf(element.correct_answer)) {\r\n          case 0:\r\n            cOption = \"optionA\"\r\n            break;\r\n          case 1:\r\n            cOption = \"optionB\"\r\n            break;\r\n          case 2:\r\n            cOption = \"optionC\"\r\n            break;\r\n          case 3:\r\n            cOption = \"optionD\"\r\n            break;\r\n        }\r\n\r\n        const temp = {\r\n          question: element.question,\r\n          optionA: shuf[0],\r\n          optionB: shuf[1],\r\n          optionC: shuf[2],\r\n          optionD: shuf[3],\r\n          correctOption: cOption,\r\n          nIncorrectOptions: element.incorrect_answers.length\r\n        }\r\n        dataQuestions.push(temp)\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}