{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\ndocument.addEventListener('readystatechange', event => {\n  if (event.target.readyState === \"complete\") {\n    countDown(); //getData();\n\n    NextQuestion();\n  }\n});\ndocument.getElementById(\"option-one-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionA\");\n});\ndocument.getElementById(\"option-two-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionB\");\n});\ndocument.getElementById(\"option-three-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionC\");\n});\ndocument.getElementById(\"option-four-label\").addEventListener(\"click\", function () {\n  checkAnswer(\"optionD\");\n});\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () {\n  newGame();\n});\n\nfunction test(index) {\n  alert(index);\n}\n\nconst questions = [{\n  question: \"How many days makes a week ?\",\n  optionA: \"10 days\",\n  optionB: \"14 days\",\n  optionC: \"5 days\",\n  optionD: \"7 days\",\n  correctOption: \"optionD\"\n}, {\n  question: \"How old am I ?\",\n  optionA: \"20\",\n  optionB: \"29\",\n  optionC: \"15\",\n  optionD: \"50\",\n  correctOption: \"optionB\"\n}];\nlet playerScore = 0; //holds the player score\n\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\nlet wrongAnswers = 0; //amount of wrong answers picked by player\n\nlet rightAnswers = 0;\nlet indexNumber = -1; //will be used in displaying next question\n\nlet currentQuestion = questions[indexNumber];\nlet bestScore = 0;\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\nconst dataQuestions = [];\nvar stop = false; // function for displaying next question in the array to dom\n//also handles displaying players and quiz information to dom\n\nfunction NextQuestion() {\n  if (indexNumber < questions.length) {\n    indexNumber++;\n    currentQuestion = questions[indexNumber];\n    stop = true;\n    stop = false;\n    countDown();\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\n    document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\n    document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\n  } else endOfGame();\n}\n\n_c = NextQuestion;\n\nfunction checkAnswer(option) {\n  if (option == currentQuestion.correctOption) {\n    playerScore += 10;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    rightAnswers++;\n  } else {\n    playerScore -= 5;\n    document.getElementById(\"player-score\").innerHTML = playerScore;\n    wrongAnswers++;\n  }\n\n  NextQuestion();\n}\n\nfunction countDown() {\n  var countDownDate = addSeconds(new Date().getTime(), 10); // Update the count down every 1 second\n\n  var x = setInterval(function () {\n    if (stop == true) stopInterval(); // Get today's date and time\n\n    var now = new Date().getTime(); // Find the distance between now and the count down date\n\n    var distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n    var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    var seconds = Math.floor(distance % (1000 * 60) / 1000);\n    minutes = minutes.toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    });\n    seconds = seconds.toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    }); // Display the result in the element with id=\"demo\"\n\n    document.getElementById(\"remaining-time\").innerHTML = minutes + \":\" + seconds; // If the count down is finished, write some text\n\n    if (distance < 0) {\n      clearInterval(x);\n      NextQuestion();\n    }\n  }, 1000);\n\n  function stopInterval() {\n    clearInterval(x);\n  }\n}\n\nfunction addSeconds(date, seconds) {\n  return new Date(date + seconds * 1000);\n}\n\nfunction endOfGame() {\n  document.getElementById(\"remaining-time\").innerHTML = \"EXPIRED\";\n  document.getElementById('score-modal').style.display = 'flex';\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\n  document.getElementById('right-answers').innerHTML = rightAnswers;\n  document.getElementById('score').innerHTML = playerScore;\n}\n\nfunction newGame() {\n  countDown(); //getData();\n\n  eraseEverything();\n  NextQuestion();\n}\n\nfunction eraseEverything() {\n  if (playerScore > bestScore) {\n    bestScore = playerScore;\n    document.getElementById(\"best-score\").innerHTML = playerScore;\n  }\n\n  document.getElementById('score-modal').style.display = 'none';\n  playerScore = 0; //holds the player score\n\n  document.getElementById(\"player-score\").innerHTML = playerScore;\n  wrongAnswers = 0; //amount of wrong answers picked by player\n\n  rightAnswers = 0;\n  indexNumber = -1; //will be used in displaying next question\n}\n/*function getData(){\r\n\r\n  var getJSON = function(url, callback) {\r\n\r\n    var xmlhttprequest = new XMLHttpRequest();\r\n    xmlhttprequest.open('GET', url, true);\r\n    xmlhttprequest.responseType = 'json';\r\n\r\n    xmlhttprequest.onload = function() {\r\n\r\n        var status = xmlhttprequest.status;\r\n\r\n        if (status == 200) {\r\n            callback(null, xmlhttprequest.response);\r\n        } else {\r\n            callback(status, xmlhttprequest.response);\r\n        }\r\n    };\r\n\r\n    xmlhttprequest.send();\r\n};\r\n\r\ngetJSON('https://opentdb.com/api.php?amount=100',  function(err, data) {\r\n\r\n    if (err != null) {\r\n        console.error(err);\r\n    } else {\r\n\r\n      var res = 'category: ${data.result[0].category}';\r\n      console.log(res.category)\r\n\r\n       var display = `User_ID: ${data.userId}\r\nID: ${data.id}\r\nTitle: ${data.title} \r\nCompletion_Status: ${data.completed}`;\r\n    }\r\n  \r\n});\r\n      \r\n      data.forEach(q => {\r\n        const newQuestion = {\r\n          question: q.question,\r\n          optionA: q.correct_answer,\r\n          optionB: q.incorrect_answers[0],\r\n          optionC: q.incorrect_answers[1],\r\n          optionD: q.incorrect_answers[2],\r\n          correctOption: q.correct_answer\r\n        }\r\n    \r\n        console.log(newQuestion.question)\r\n    \r\n        dataQuestions.push(newQuestion);\r\n        \r\n      });\r\n   \r\n\r\n}*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/cApplication/create-react-app-quizz-monday/quiz-m/src/index.js"],"names":["React","ReactDOM","App","document","addEventListener","event","target","readyState","countDown","NextQuestion","getElementById","checkAnswer","newGame","test","index","alert","questions","question","optionA","optionB","optionC","optionD","correctOption","playerScore","innerHTML","wrongAnswers","rightAnswers","indexNumber","currentQuestion","bestScore","dataQuestions","stop","length","endOfGame","option","countDownDate","addSeconds","Date","getTime","x","setInterval","stopInterval","now","distance","minutes","Math","floor","seconds","toLocaleString","minimumIntegerDigits","useGrouping","clearInterval","date","style","display","eraseEverything"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\ndocument.addEventListener('readystatechange', event => {\r\n  if (event.target.readyState === \"complete\") {\r\n    countDown();\r\n    //getData();\r\n    NextQuestion();\r\n  }\r\n});\r\n\r\ndocument.getElementById(\"option-one-label\").addEventListener(\"click\", function () { checkAnswer(\"optionA\"); });\r\ndocument.getElementById(\"option-two-label\").addEventListener(\"click\", function () { checkAnswer(\"optionB\"); });\r\ndocument.getElementById(\"option-three-label\").addEventListener(\"click\", function () { checkAnswer(\"optionC\"); });\r\ndocument.getElementById(\"option-four-label\").addEventListener(\"click\", function () { checkAnswer(\"optionD\"); });\r\n\r\ndocument.getElementById(\"continue\").addEventListener(\"click\", function () { newGame() });\r\n\r\nfunction test(index) {\r\n  alert(index)\r\n}\r\n\r\n\r\nconst questions = [\r\n  {\r\n    question: \"How many days makes a week ?\",\r\n    optionA: \"10 days\",\r\n    optionB: \"14 days\",\r\n    optionC: \"5 days\",\r\n    optionD: \"7 days\",\r\n    correctOption: \"optionD\"\r\n  },\r\n  {\r\n    question: \"How old am I ?\",\r\n    optionA: \"20\",\r\n    optionB: \"29\",\r\n    optionC: \"15\",\r\n    optionD: \"50\",\r\n    correctOption: \"optionB\"\r\n  }\r\n]\r\n\r\nlet playerScore = 0  //holds the player score\r\ndocument.getElementById(\"player-score\").innerHTML = playerScore;\r\nlet wrongAnswers = 0 //amount of wrong answers picked by player\r\nlet rightAnswers = 0\r\nlet indexNumber = -1 //will be used in displaying next question\r\nlet currentQuestion = questions[indexNumber]\r\nlet bestScore = 0;\r\ndocument.getElementById(\"best-score\").innerHTML = playerScore;\r\nconst dataQuestions = [];\r\nvar stop = false;\r\n\r\n// function for displaying next question in the array to dom\r\n//also handles displaying players and quiz information to dom\r\nfunction NextQuestion() {\r\n  if (indexNumber < questions.length) {\r\n    indexNumber++\r\n    currentQuestion = questions[indexNumber];\r\n    stop = true\r\n    stop = false\r\n    countDown()\r\n    document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\r\n    document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\r\n    document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\r\n    document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\r\n    document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\r\n  }\r\n  else\r\n    endOfGame()\r\n}\r\n\r\nfunction checkAnswer(option) {\r\n  if (option == currentQuestion.correctOption) {\r\n    playerScore += 10;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    rightAnswers++;\r\n  }\r\n  else {\r\n    playerScore -= 5;\r\n    document.getElementById(\"player-score\").innerHTML = playerScore\r\n    wrongAnswers++;\r\n  }\r\n  NextQuestion()\r\n}\r\n\r\n\r\nfunction countDown() {\r\n  var countDownDate = addSeconds(new Date().getTime(), 10)\r\n\r\n  // Update the count down every 1 second\r\n  var x = setInterval(function () {\r\n\r\n    if (stop == true)\r\n    stopInterval()\r\n\r\n    // Get today's date and time\r\n    var now = new Date().getTime();\r\n\r\n    // Find the distance between now and the count down date\r\n    var distance = countDownDate - now;\r\n\r\n    // Time calculations for days, hours, minutes and seconds\r\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    minutes = (minutes).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\r\n    seconds = (seconds).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\r\n\r\n    // Display the result in the element with id=\"demo\"\r\n    document.getElementById(\"remaining-time\").innerHTML = minutes + \":\" + seconds;\r\n\r\n    // If the count down is finished, write some text\r\n    if (distance < 0) {\r\n      clearInterval(x);\r\n      NextQuestion();\r\n    }\r\n  }, 1000);\r\n\r\n  function stopInterval(){\r\n    clearInterval(x);\r\n  }\r\n}\r\n\r\nfunction addSeconds(date, seconds) {\r\n  return new Date(date + seconds * 1000);\r\n}\r\n\r\nfunction endOfGame() {\r\n  document.getElementById(\"remaining-time\").innerHTML = \"EXPIRED\";\r\n  document.getElementById('score-modal').style.display = 'flex';\r\n  document.getElementById('wrong-answers').innerHTML = wrongAnswers;\r\n  document.getElementById('right-answers').innerHTML = rightAnswers;\r\n  document.getElementById('score').innerHTML = playerScore;\r\n\r\n}\r\n\r\nfunction newGame() {\r\n  countDown();\r\n  //getData();\r\n  eraseEverything()\r\n  NextQuestion();\r\n}\r\n\r\nfunction eraseEverything() {\r\n  if (playerScore > bestScore) {\r\n    bestScore = playerScore\r\n    document.getElementById(\"best-score\").innerHTML = playerScore;\r\n  }\r\n\r\n  document.getElementById('score-modal').style.display = 'none';\r\n  playerScore = 0  //holds the player score\r\n  document.getElementById(\"player-score\").innerHTML = playerScore;\r\n  wrongAnswers = 0 //amount of wrong answers picked by player\r\n  rightAnswers = 0\r\n  indexNumber = -1 //will be used in displaying next question\r\n}\r\n\r\n/*function getData(){\r\n\r\n  var getJSON = function(url, callback) {\r\n\r\n    var xmlhttprequest = new XMLHttpRequest();\r\n    xmlhttprequest.open('GET', url, true);\r\n    xmlhttprequest.responseType = 'json';\r\n\r\n    xmlhttprequest.onload = function() {\r\n\r\n        var status = xmlhttprequest.status;\r\n\r\n        if (status == 200) {\r\n            callback(null, xmlhttprequest.response);\r\n        } else {\r\n            callback(status, xmlhttprequest.response);\r\n        }\r\n    };\r\n\r\n    xmlhttprequest.send();\r\n};\r\n\r\ngetJSON('https://opentdb.com/api.php?amount=100',  function(err, data) {\r\n\r\n    if (err != null) {\r\n        console.error(err);\r\n    } else {\r\n\r\n      var res = 'category: ${data.result[0].category}';\r\n      console.log(res.category)\r\n\r\n       var display = `User_ID: ${data.userId}\r\nID: ${data.id}\r\nTitle: ${data.title} \r\nCompletion_Status: ${data.completed}`;\r\n    }\r\n  \r\n});\r\n      \r\n      data.forEach(q => {\r\n        const newQuestion = {\r\n          question: q.question,\r\n          optionA: q.correct_answer,\r\n          optionB: q.incorrect_answers[0],\r\n          optionC: q.incorrect_answers[1],\r\n          optionD: q.incorrect_answers[2],\r\n          correctOption: q.correct_answer\r\n        }\r\n    \r\n        console.log(newQuestion.question)\r\n    \r\n        dataQuestions.push(newQuestion);\r\n        \r\n      });\r\n   \r\n\r\n}*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}