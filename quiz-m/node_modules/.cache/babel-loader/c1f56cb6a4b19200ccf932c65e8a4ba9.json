{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\ndocument.addEventListener('readystatechange', event => {\n  if (event.target.readyState === \"complete\") {//test();\n  }\n});\n\nfunction test() {\n  alert('test2');\n}\n\nconst questions = [{\n  question: \"How many days makes a week ?\",\n  optionA: \"10 days\",\n  optionB: \"14 days\",\n  optionC: \"5 days\",\n  optionD: \"7 days\",\n  correctOption: \"optionD\"\n}, {\n  question: \"How many players are allowed on a soccer pitch ?\",\n  optionA: \"10 players\",\n  optionB: \"11 players\",\n  optionC: \"9 players\",\n  optionD: \"12 players\",\n  correctOption: \"optionB\"\n}, {\n  question: \"Who was the first President of USA ?\",\n  optionA: \"Donald Trump\",\n  optionB: \"Barack Obama\",\n  optionC: \"Abraham Lincoln\",\n  optionD: \"George Washington\",\n  correctOption: \"optionD\"\n}, {\n  question: \"30 days has ______ ?\",\n  optionA: \"January\",\n  optionB: \"December\",\n  optionC: \"June\",\n  optionD: \"August\",\n  correctOption: \"optionC\"\n}, {\n  question: \"How manay hours can be found in a day ?\",\n  optionA: \"30 hours\",\n  optionB: \"38 hours\",\n  optionC: \"48 hours\",\n  optionD: \"24 hours\",\n  correctOption: \"optionD\"\n}, {\n  question: \"Which is the longest river in the world ?\",\n  optionA: \"River Nile\",\n  optionB: \"Long River\",\n  optionC: \"River Niger\",\n  optionD: \"Lake Chad\",\n  correctOption: \"optionA\"\n}, {\n  question: \"_____ is the hottest Continent on Earth ?\",\n  optionA: \"Oceania\",\n  optionB: \"Antarctica\",\n  optionC: \"Africa\",\n  optionD: \"North America\",\n  correctOption: \"optionC\"\n}, {\n  question: \"Which country is the largest in the world ?\",\n  optionA: \"Russia\",\n  optionB: \"Canada\",\n  optionC: \"Africa\",\n  optionD: \"Egypt\",\n  correctOption: \"optionA\"\n}, {\n  question: \"Which of these numbers is an odd number ?\",\n  optionA: \"Ten\",\n  optionB: \"Twelve\",\n  optionC: \"Eight\",\n  optionD: \"Eleven\",\n  correctOption: \"optionD\"\n}, {\n  question: `\"You Can't see me\" is a popular saying by`,\n  optionA: \"Eminem\",\n  optionB: \"Bill Gates\",\n  optionC: \"Chris Brown\",\n  optionD: \"John Cena\",\n  correctOption: \"optionD\"\n}, {\n  question: \"Where is the world tallest building located ?\",\n  optionA: \"Africa\",\n  optionB: \"California\",\n  optionC: \"Dubai\",\n  optionD: \"Italy\",\n  correctOption: \"optionC\"\n}, {\n  question: \"The longest river in the United Kingdom is ?\",\n  optionA: \"River Severn\",\n  optionB: \"River Mersey\",\n  optionC: \"River Trent\",\n  optionD: \"River Tweed\",\n  correctOption: \"optionA\"\n}, {\n  question: \"How many permanent teeth does a dog have ?\",\n  optionA: \"38\",\n  optionB: \"42\",\n  optionC: \"40\",\n  optionD: \"36\",\n  correctOption: \"optionB\"\n}, {\n  question: \"Which national team won the football World cup in 2018 ?\",\n  optionA: \"England\",\n  optionB: \"Brazil\",\n  optionC: \"Germany\",\n  optionD: \"France\",\n  correctOption: \"optionD\"\n}, {\n  question: \"Which US state was Donald Trump Born ?\",\n  optionA: \"New York\",\n  optionB: \"California\",\n  optionC: \"New Jersey\",\n  optionD: \"Los Angeles\",\n  correctOption: \"optionA\"\n}, {\n  question: \"How man states does Nigeria have ?\",\n  optionA: \"24\",\n  optionB: \"30\",\n  optionC: \"36\",\n  optionD: \"37\",\n  correctOption: \"optionC\"\n}, {\n  question: \"____ is the capital of Nigeria ?\",\n  optionA: \"Abuja\",\n  optionB: \"Lagos\",\n  optionC: \"Calabar\",\n  optionD: \"Kano\",\n  correctOption: \"optionA\"\n}, {\n  question: \"Los Angeles is also known as ?\",\n  optionA: \"Angels City\",\n  optionB: \"Shining city\",\n  optionC: \"City of Angels\",\n  optionD: \"Lost Angels\",\n  correctOption: \"optionC\"\n}, {\n  question: \"What is the capital of Germany ?\",\n  optionA: \"Georgia\",\n  optionB: \"Missouri\",\n  optionC: \"Oklahoma\",\n  optionD: \"Berlin\",\n  correctOption: \"optionD\"\n}, {\n  question: \"How many sides does an hexagon have ?\",\n  optionA: \"Six\",\n  optionB: \"Sevene\",\n  optionC: \"Four\",\n  optionD: \"Five\",\n  correctOption: \"optionA\"\n}, {\n  question: \"How many planets are currently in the solar system ?\",\n  optionA: \"Eleven\",\n  optionB: \"Seven\",\n  optionC: \"Nine\",\n  optionD: \"Eight\",\n  correctOption: \"optionD\"\n}, {\n  question: \"Which Planet is the hottest ?\",\n  optionA: \"Jupitar\",\n  optionB: \"Mercury\",\n  optionC: \"Earth\",\n  optionD: \"Venus\",\n  correctOption: \"optionB\"\n}, {\n  question: \"where is the smallest bone in human body located?\",\n  optionA: \"Toes\",\n  optionB: \"Ears\",\n  optionC: \"Fingers\",\n  optionD: \"Nose\",\n  correctOption: \"optionB\"\n}, {\n  question: \"How many hearts does an Octopus have ?\",\n  optionA: \"One\",\n  optionB: \"Two\",\n  optionC: \"Three\",\n  optionD: \"Four\",\n  correctOption: \"optionC\"\n}, {\n  question: \"How many teeth does an adult human have ?\",\n  optionA: \"28\",\n  optionB: \"30\",\n  optionC: \"32\",\n  optionD: \"36\",\n  correctOption: \"optionC\"\n}];\nlet shuffledQuestions = []; //empty array to hold shuffled selected questions out of all available questions\n\nfunction handleQuestions() {\n  //function to shuffle and push 10 questions to shuffledQuestions array\n  //app would be dealing with 10questions per session\n  while (shuffledQuestions.length <= 9) {\n    const random = questions[Math.floor(Math.random() * questions.length)];\n\n    if (!shuffledQuestions.includes(random)) {\n      shuffledQuestions.push(random);\n    }\n  }\n}\n\nlet questionNumber = 1; //holds the current question number\n\nlet playerScore = 0; //holds the player score\n\nlet wrongAttempt = 0; //amount of wrong answers picked by player\n\nlet indexNumber = 0; //will be used in displaying next question\n// function for displaying next question in the array to dom\n//also handles displaying players and quiz information to dom\n\nfunction NextQuestion(index) {\n  handleQuestions();\n  const currentQuestion = shuffledQuestions[index];\n  document.getElementById(\"question-number\").innerHTML = questionNumber;\n  document.getElementById(\"player-score\").innerHTML = playerScore;\n  document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\n  document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\n  document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\n  document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\n  document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\n}\n/*\r\n\r\nfunction checkForAnswer() {\r\n  const currentQuestion = shuffledQuestions[indexNumber] //gets current Question \r\n  const currentQuestionAnswer = currentQuestion.correctOption //gets current Question's answer\r\n  const options = document.getElementsByName(\"option\"); //gets all elements in dom with name of 'option' (in this the radio inputs)\r\n  let correctOption = null\r\n\r\n  options.forEach((option) => {\r\n      if (option.value === currentQuestionAnswer) {\r\n          //get's correct's radio input with correct answer\r\n          correctOption = option.labels[0].id\r\n      }\r\n  })\r\n\r\n  //checking to make sure a radio input has been checked or an option being chosen\r\n  if (options[0].checked === false && options[1].checked === false && options[2].checked === false && options[3].checked == false) {\r\n      document.getElementById('option-modal').style.display = \"flex\"\r\n  }\r\n\r\n  //checking if checked radio button is same as answer\r\n  options.forEach((option) => {\r\n      if (option.checked === true && option.value === currentQuestionAnswer) {\r\n          document.getElementById(correctOption).style.backgroundColor = \"green\"\r\n          playerScore++ //adding to player's score\r\n          indexNumber++ //adding 1 to index so has to display next question..\r\n          //set to delay question number till when next question loads\r\n          setTimeout(() => {\r\n              questionNumber++\r\n          }, 1000)\r\n      }\r\n\r\n      else if (option.checked && option.value !== currentQuestionAnswer) {\r\n          const wrongLabelId = option.labels[0].id\r\n          document.getElementById(wrongLabelId).style.backgroundColor = \"red\"\r\n          document.getElementById(correctOption).style.backgroundColor = \"green\"\r\n          wrongAttempt++ //adds 1 to wrong attempts \r\n          indexNumber++\r\n          //set to delay question number till when next question loads\r\n          setTimeout(() => {\r\n              questionNumber++\r\n          }, 1000)\r\n      }\r\n  })\r\n}\r\n\r\n\r\n\r\n//called when the next button is called\r\nfunction handleNextQuestion() {\r\n  checkForAnswer() //check if player picked right or wrong option\r\n  unCheckRadioButtons()\r\n  //delays next question displaying for a second just for some effects so questions don't rush in on player\r\n  setTimeout(() => {\r\n      if (indexNumber <= 9) {\r\n//displays next question as long as index number isn't greater than 9, remember index number starts from 0, so index 9 is question 10\r\n          NextQuestion(indexNumber)\r\n      }\r\n      else {\r\n          handleEndGame()//ends game if index number greater than 9 meaning we're already at the 10th question\r\n      }\r\n      resetOptionBackground()\r\n  }, 1000);\r\n}\r\n\r\n//sets options background back to null after display the right/wrong colors\r\nfunction resetOptionBackground() {\r\n  const options = document.getElementsByName(\"option\");\r\n  options.forEach((option) => {\r\n      document.getElementById(option.labels[0].id).style.backgroundColor = \"\"\r\n  })\r\n}\r\n\r\n// unchecking all radio buttons for next question(can be done with map or foreach loop also)\r\nfunction unCheckRadioButtons() {\r\n  const options = document.getElementsByName(\"option\");\r\n  for (let i = 0; i < options.length; i++) {\r\n      options[i].checked = false;\r\n  }\r\n}\r\n\r\n// function for when all questions being answered\r\nfunction handleEndGame() {\r\n  let remark = null\r\n  let remarkColor = null\r\n\r\n  // condition check for player remark and remark color\r\n  if (playerScore <= 3) {\r\n      remark = \"Bad Grades, Keep Practicing.\"\r\n      remarkColor = \"red\"\r\n  }\r\n  else if (playerScore >= 4 && playerScore < 7) {\r\n      remark = \"Average Grades, You can do better.\"\r\n      remarkColor = \"orange\"\r\n  }\r\n  else if (playerScore >= 7) {\r\n      remark = \"Excellent, Keep the good work going.\"\r\n      remarkColor = \"green\"\r\n  }\r\n  const playerGrade = (playerScore / 10) * 100\r\n\r\n  //data to display to score board\r\n  document.getElementById('remarks').innerHTML = remark\r\n  document.getElementById('remarks').style.color = remarkColor\r\n  document.getElementById('grade-percentage').innerHTML = playerGrade\r\n  document.getElementById('wrong-answers').innerHTML = wrongAttempt\r\n  document.getElementById('right-answers').innerHTML = playerScore\r\n  document.getElementById('score-modal').style.display = \"flex\"\r\n\r\n}\r\n\r\n//closes score modal, resets game and reshuffles questions\r\nfunction closeScoreModal() {\r\n  questionNumber = 1\r\n  playerScore = 0\r\n  wrongAttempt = 0\r\n  indexNumber = 0\r\n  shuffledQuestions = []\r\n  NextQuestion(indexNumber)\r\n  document.getElementById('score-modal').style.display = \"none\"\r\n}\r\n\r\n//function to close warning modal\r\nfunction closeOptionModal() {\r\n  document.getElementById('option-modal').style.display = \"none\"\r\n}*/\n\n\n_c = NextQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/cApplication/create-react-app-quizz-monday/quiz-m/src/index.js"],"names":["React","ReactDOM","App","document","addEventListener","event","target","readyState","test","alert","questions","question","optionA","optionB","optionC","optionD","correctOption","shuffledQuestions","handleQuestions","length","random","Math","floor","includes","push","questionNumber","playerScore","wrongAttempt","indexNumber","NextQuestion","index","currentQuestion","getElementById","innerHTML"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\ndocument.addEventListener('readystatechange', event => { \r\n  if (event.target.readyState === \"complete\") {\r\n      //test();\r\n  }\r\n});\r\n\r\nfunction test(){\r\n  alert('test2')\r\n}\r\n\r\nconst questions = [\r\n  {\r\n      question: \"How many days makes a week ?\",\r\n      optionA: \"10 days\",\r\n      optionB: \"14 days\",\r\n      optionC: \"5 days\",\r\n      optionD: \"7 days\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"How many players are allowed on a soccer pitch ?\",\r\n      optionA: \"10 players\",\r\n      optionB: \"11 players\",\r\n      optionC: \"9 players\",\r\n      optionD: \"12 players\",\r\n      correctOption: \"optionB\"\r\n  },\r\n\r\n  {\r\n      question: \"Who was the first President of USA ?\",\r\n      optionA: \"Donald Trump\",\r\n      optionB: \"Barack Obama\",\r\n      optionC: \"Abraham Lincoln\",\r\n      optionD: \"George Washington\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"30 days has ______ ?\",\r\n      optionA: \"January\",\r\n      optionB: \"December\",\r\n      optionC: \"June\",\r\n      optionD: \"August\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"How manay hours can be found in a day ?\",\r\n      optionA: \"30 hours\",\r\n      optionB: \"38 hours\",\r\n      optionC: \"48 hours\",\r\n      optionD: \"24 hours\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"Which is the longest river in the world ?\",\r\n      optionA: \"River Nile\",\r\n      optionB: \"Long River\",\r\n      optionC: \"River Niger\",\r\n      optionD: \"Lake Chad\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n  {\r\n      question: \"_____ is the hottest Continent on Earth ?\",\r\n      optionA: \"Oceania\",\r\n      optionB: \"Antarctica\",\r\n      optionC: \"Africa\",\r\n      optionD: \"North America\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"Which country is the largest in the world ?\",\r\n      optionA: \"Russia\",\r\n      optionB: \"Canada\",\r\n      optionC: \"Africa\",\r\n      optionD: \"Egypt\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n  {\r\n      question: \"Which of these numbers is an odd number ?\",\r\n      optionA: \"Ten\",\r\n      optionB: \"Twelve\",\r\n      optionC: \"Eight\",\r\n      optionD: \"Eleven\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: `\"You Can't see me\" is a popular saying by`,\r\n      optionA: \"Eminem\",\r\n      optionB: \"Bill Gates\",\r\n      optionC: \"Chris Brown\",\r\n      optionD: \"John Cena\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"Where is the world tallest building located ?\",\r\n      optionA: \"Africa\",\r\n      optionB: \"California\",\r\n      optionC: \"Dubai\",\r\n      optionD: \"Italy\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"The longest river in the United Kingdom is ?\",\r\n      optionA: \"River Severn\",\r\n      optionB: \"River Mersey\",\r\n      optionC: \"River Trent\",\r\n      optionD: \"River Tweed\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n\r\n  {\r\n      question: \"How many permanent teeth does a dog have ?\",\r\n      optionA: \"38\",\r\n      optionB: \"42\",\r\n      optionC: \"40\",\r\n      optionD: \"36\",\r\n      correctOption: \"optionB\"\r\n  },\r\n\r\n  {\r\n      question: \"Which national team won the football World cup in 2018 ?\",\r\n      optionA: \"England\",\r\n      optionB: \"Brazil\",\r\n      optionC: \"Germany\",\r\n      optionD: \"France\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"Which US state was Donald Trump Born ?\",\r\n      optionA: \"New York\",\r\n      optionB: \"California\",\r\n      optionC: \"New Jersey\",\r\n      optionD: \"Los Angeles\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n  {\r\n      question: \"How man states does Nigeria have ?\",\r\n      optionA: \"24\",\r\n      optionB: \"30\",\r\n      optionC: \"36\",\r\n      optionD: \"37\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"____ is the capital of Nigeria ?\",\r\n      optionA: \"Abuja\",\r\n      optionB: \"Lagos\",\r\n      optionC: \"Calabar\",\r\n      optionD: \"Kano\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n  {\r\n      question: \"Los Angeles is also known as ?\",\r\n      optionA: \"Angels City\",\r\n      optionB: \"Shining city\",\r\n      optionC: \"City of Angels\",\r\n      optionD: \"Lost Angels\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"What is the capital of Germany ?\",\r\n      optionA: \"Georgia\",\r\n      optionB: \"Missouri\",\r\n      optionC: \"Oklahoma\",\r\n      optionD: \"Berlin\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"How many sides does an hexagon have ?\",\r\n      optionA: \"Six\",\r\n      optionB: \"Sevene\",\r\n      optionC: \"Four\",\r\n      optionD: \"Five\",\r\n      correctOption: \"optionA\"\r\n  },\r\n\r\n  {\r\n      question: \"How many planets are currently in the solar system ?\",\r\n      optionA: \"Eleven\",\r\n      optionB: \"Seven\",\r\n      optionC: \"Nine\",\r\n      optionD: \"Eight\",\r\n      correctOption: \"optionD\"\r\n  },\r\n\r\n  {\r\n      question: \"Which Planet is the hottest ?\",\r\n      optionA: \"Jupitar\",\r\n      optionB: \"Mercury\",\r\n      optionC: \"Earth\",\r\n      optionD: \"Venus\",\r\n      correctOption: \"optionB\"\r\n  },\r\n\r\n  {\r\n      question: \"where is the smallest bone in human body located?\",\r\n      optionA: \"Toes\",\r\n      optionB: \"Ears\",\r\n      optionC: \"Fingers\",\r\n      optionD: \"Nose\",\r\n      correctOption: \"optionB\"\r\n  },\r\n\r\n  {\r\n      question: \"How many hearts does an Octopus have ?\",\r\n      optionA: \"One\",\r\n      optionB: \"Two\",\r\n      optionC: \"Three\",\r\n      optionD: \"Four\",\r\n      correctOption: \"optionC\"\r\n  },\r\n\r\n  {\r\n      question: \"How many teeth does an adult human have ?\",\r\n      optionA: \"28\",\r\n      optionB: \"30\",\r\n      optionC: \"32\",\r\n      optionD: \"36\",\r\n      correctOption: \"optionC\"\r\n  }\r\n\r\n]\r\n\r\n\r\nlet shuffledQuestions = [] //empty array to hold shuffled selected questions out of all available questions\r\n\r\nfunction handleQuestions() { \r\n  //function to shuffle and push 10 questions to shuffledQuestions array\r\n//app would be dealing with 10questions per session\r\n  while (shuffledQuestions.length <= 9) {\r\n      const random = questions[Math.floor(Math.random() * questions.length)]\r\n      if (!shuffledQuestions.includes(random)) {\r\n          shuffledQuestions.push(random)\r\n      }\r\n  }\r\n}\r\n\r\n\r\nlet questionNumber = 1 //holds the current question number\r\nlet playerScore = 0  //holds the player score\r\nlet wrongAttempt = 0 //amount of wrong answers picked by player\r\nlet indexNumber = 0 //will be used in displaying next question\r\n\r\n// function for displaying next question in the array to dom\r\n//also handles displaying players and quiz information to dom\r\nfunction NextQuestion(index) {\r\n  handleQuestions()\r\n  const currentQuestion = shuffledQuestions[index]\r\n  document.getElementById(\"question-number\").innerHTML = questionNumber\r\n  document.getElementById(\"player-score\").innerHTML = playerScore\r\n  document.getElementById(\"display-question\").innerHTML = currentQuestion.question;\r\n  document.getElementById(\"option-one-label\").innerHTML = currentQuestion.optionA;\r\n  document.getElementById(\"option-two-label\").innerHTML = currentQuestion.optionB;\r\n  document.getElementById(\"option-three-label\").innerHTML = currentQuestion.optionC;\r\n  document.getElementById(\"option-four-label\").innerHTML = currentQuestion.optionD;\r\n\r\n}\r\n/*\r\n\r\nfunction checkForAnswer() {\r\n  const currentQuestion = shuffledQuestions[indexNumber] //gets current Question \r\n  const currentQuestionAnswer = currentQuestion.correctOption //gets current Question's answer\r\n  const options = document.getElementsByName(\"option\"); //gets all elements in dom with name of 'option' (in this the radio inputs)\r\n  let correctOption = null\r\n\r\n  options.forEach((option) => {\r\n      if (option.value === currentQuestionAnswer) {\r\n          //get's correct's radio input with correct answer\r\n          correctOption = option.labels[0].id\r\n      }\r\n  })\r\n\r\n  //checking to make sure a radio input has been checked or an option being chosen\r\n  if (options[0].checked === false && options[1].checked === false && options[2].checked === false && options[3].checked == false) {\r\n      document.getElementById('option-modal').style.display = \"flex\"\r\n  }\r\n\r\n  //checking if checked radio button is same as answer\r\n  options.forEach((option) => {\r\n      if (option.checked === true && option.value === currentQuestionAnswer) {\r\n          document.getElementById(correctOption).style.backgroundColor = \"green\"\r\n          playerScore++ //adding to player's score\r\n          indexNumber++ //adding 1 to index so has to display next question..\r\n          //set to delay question number till when next question loads\r\n          setTimeout(() => {\r\n              questionNumber++\r\n          }, 1000)\r\n      }\r\n\r\n      else if (option.checked && option.value !== currentQuestionAnswer) {\r\n          const wrongLabelId = option.labels[0].id\r\n          document.getElementById(wrongLabelId).style.backgroundColor = \"red\"\r\n          document.getElementById(correctOption).style.backgroundColor = \"green\"\r\n          wrongAttempt++ //adds 1 to wrong attempts \r\n          indexNumber++\r\n          //set to delay question number till when next question loads\r\n          setTimeout(() => {\r\n              questionNumber++\r\n          }, 1000)\r\n      }\r\n  })\r\n}\r\n\r\n\r\n\r\n//called when the next button is called\r\nfunction handleNextQuestion() {\r\n  checkForAnswer() //check if player picked right or wrong option\r\n  unCheckRadioButtons()\r\n  //delays next question displaying for a second just for some effects so questions don't rush in on player\r\n  setTimeout(() => {\r\n      if (indexNumber <= 9) {\r\n//displays next question as long as index number isn't greater than 9, remember index number starts from 0, so index 9 is question 10\r\n          NextQuestion(indexNumber)\r\n      }\r\n      else {\r\n          handleEndGame()//ends game if index number greater than 9 meaning we're already at the 10th question\r\n      }\r\n      resetOptionBackground()\r\n  }, 1000);\r\n}\r\n\r\n//sets options background back to null after display the right/wrong colors\r\nfunction resetOptionBackground() {\r\n  const options = document.getElementsByName(\"option\");\r\n  options.forEach((option) => {\r\n      document.getElementById(option.labels[0].id).style.backgroundColor = \"\"\r\n  })\r\n}\r\n\r\n// unchecking all radio buttons for next question(can be done with map or foreach loop also)\r\nfunction unCheckRadioButtons() {\r\n  const options = document.getElementsByName(\"option\");\r\n  for (let i = 0; i < options.length; i++) {\r\n      options[i].checked = false;\r\n  }\r\n}\r\n\r\n// function for when all questions being answered\r\nfunction handleEndGame() {\r\n  let remark = null\r\n  let remarkColor = null\r\n\r\n  // condition check for player remark and remark color\r\n  if (playerScore <= 3) {\r\n      remark = \"Bad Grades, Keep Practicing.\"\r\n      remarkColor = \"red\"\r\n  }\r\n  else if (playerScore >= 4 && playerScore < 7) {\r\n      remark = \"Average Grades, You can do better.\"\r\n      remarkColor = \"orange\"\r\n  }\r\n  else if (playerScore >= 7) {\r\n      remark = \"Excellent, Keep the good work going.\"\r\n      remarkColor = \"green\"\r\n  }\r\n  const playerGrade = (playerScore / 10) * 100\r\n\r\n  //data to display to score board\r\n  document.getElementById('remarks').innerHTML = remark\r\n  document.getElementById('remarks').style.color = remarkColor\r\n  document.getElementById('grade-percentage').innerHTML = playerGrade\r\n  document.getElementById('wrong-answers').innerHTML = wrongAttempt\r\n  document.getElementById('right-answers').innerHTML = playerScore\r\n  document.getElementById('score-modal').style.display = \"flex\"\r\n\r\n}\r\n\r\n//closes score modal, resets game and reshuffles questions\r\nfunction closeScoreModal() {\r\n  questionNumber = 1\r\n  playerScore = 0\r\n  wrongAttempt = 0\r\n  indexNumber = 0\r\n  shuffledQuestions = []\r\n  NextQuestion(indexNumber)\r\n  document.getElementById('score-modal').style.display = \"none\"\r\n}\r\n\r\n//function to close warning modal\r\nfunction closeOptionModal() {\r\n  document.getElementById('option-modal').style.display = \"none\"\r\n}*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}